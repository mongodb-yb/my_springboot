一、JMS-java消息服务 介绍
    一组Java应用程序接口，提供消息的创建、发送、读取等一系列服务。
    组成：
    Broker：消息服务器，提供消息核心服务；
    producer：消息生产者，负责生产消息传输给Broker；
    consumer：消息消费者，负责从Broker获取消息并进行业务处理。
    Topic：主题，发布订阅模式下的消息聚集中心，可实现消息广播；
    Queue：队列，ptp模式下的消息存储中心；
    Message：封装业务数据，实现消息传递。
二、JMS的两种消息发送接收模式
    1、ptp-点对点模型
       ptp模型基于队列，消息生产者发送消息到队列，消息消费者从队列中接受消息。
       队列的存在使得消息的异步传输成为可能。
       消息生产者---->队列Queue<------消息消费者(消费消息并向队列响应消费结果)
       特点：一个消息只有一个生产者消费，该消息一旦被消费，队列中就不存在了；消费者消费消息后需要向队列响应。
             无论接收者有没有在运行，都不会影响消息发送到队列
    2、pub/sub(publish/subscribe,发布/订阅)模型
       发布消息者(publisher)------->主题---------->订阅消息者1、订阅消息者2...
       定义了如何向一个消息节点发布和订阅消息，这个内容节点称之为主题，即消息传递的中介。
       特点：每个消息可以有多个消费者，一对多的广播时采用。
三、springboot集成ActiveMQ
    1、概述
       MessageQueue,消息队列，一个消息接收和消费的容器。Apache的开源消息系统，纯Java实现。
    2、安装ActiveMQ
       下载压缩包，解压缩后进入bin目录，选择64位操作系统，点击activemq.bat启动运行。
    3、运行后，在浏览器输入localhost:8161/admin,输入账号admin和密码admin，登录activemq首页。
    4、导入依赖包--spring-boot-starter-activemq。
    5、application.properties中配置activeMQ。
    6、使用ActiveMQ。
       我们发说说已经测试成功，但是如果亿量级用户每发一个说说，就需要开启一个线程，将内容保存到数据库，而后端线程池
       中的线程数是很宝贵的，这样做必然带来极大的系统压力。
       因此使用ActiveMQ做异步消费，来抵消极大地压力，提高系统性能。
    7、开发生产者和消费者，测试成功。
    8、将发微信说说改成异步消费模式。
       1、添加异步消费接口方法


